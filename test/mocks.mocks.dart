// Mocks generated by Mockito 5.3.2 from annotations
// in flutter_app_template/test/mocks.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i4;

import 'package:flutter_app_template/core/data/dao.dart' as _i5;
import 'package:flutter_app_template/core/ebr/ai_prompt_ebr.dart' as _i10;
import 'package:flutter_app_template/core/models/ai_query.dart' as _i9;
import 'package:flutter_app_template/core/models/ai_response.dart' as _i8;
import 'package:flutter_app_template/core/models/celebrated.dart' as _i11;
import 'package:flutter_app_template/core/repositories/ai_request_repository.dart'
    as _i2;
import 'package:flutter_app_template/core/services/http_service.dart' as _i6;
import 'package:flutter_app_template/core/third_party_service_wrapper/ads/abstract_ads.dart'
    as _i12;
import 'package:flutter_app_template/core/use_cases/ai_request_use_case.dart'
    as _i7;
import 'package:mockito/mockito.dart' as _i1;
import 'package:template_package/template_package.dart' as _i3;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeAiRequestRepository_0 extends _i1.SmartFake
    implements _i2.AiRequestRepository {
  _FakeAiRequestRepository_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [RemoteConfiguration].
///
/// See the documentation for Mockito's code generation for more information.
class MockRemoteConfiguration extends _i1.Mock
    implements _i3.RemoteConfiguration {
  MockRemoteConfiguration() {
    _i1.throwOnMissingStub(this);
  }

  @override
  String getString(String? key) => (super.noSuchMethod(
        Invocation.method(
          #getString,
          [key],
        ),
        returnValue: '',
      ) as String);
  @override
  bool getBool(String? key) => (super.noSuchMethod(
        Invocation.method(
          #getBool,
          [key],
        ),
        returnValue: false,
      ) as bool);
  @override
  double getDouble(String? key) => (super.noSuchMethod(
        Invocation.method(
          #getDouble,
          [key],
        ),
        returnValue: 0.0,
      ) as double);
  @override
  int getInt(String? key) => (super.noSuchMethod(
        Invocation.method(
          #getInt,
          [key],
        ),
        returnValue: 0,
      ) as int);
  @override
  _i4.Future<bool> fetchLatest() => (super.noSuchMethod(
        Invocation.method(
          #fetchLatest,
          [],
        ),
        returnValue: _i4.Future<bool>.value(false),
      ) as _i4.Future<bool>);
}

/// A class which mocks [Dao].
///
/// See the documentation for Mockito's code generation for more information.
class MockDao extends _i1.Mock implements _i5.Dao {
  MockDao() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<dynamic> setSomeData(Map<String, dynamic>? mapData) =>
      (super.noSuchMethod(
        Invocation.method(
          #setSomeData,
          [mapData],
        ),
        returnValue: _i4.Future<dynamic>.value(),
      ) as _i4.Future<dynamic>);
  @override
  _i4.Future<dynamic> getSomeData() => (super.noSuchMethod(
        Invocation.method(
          #getSomeData,
          [],
        ),
        returnValue: _i4.Future<dynamic>.value(),
      ) as _i4.Future<dynamic>);
}

/// A class which mocks [HTTPService].
///
/// See the documentation for Mockito's code generation for more information.
class MockHTTPService extends _i1.Mock implements _i6.HTTPService {
  MockHTTPService() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<dynamic> completion(Map<String, dynamic>? model) =>
      (super.noSuchMethod(
        Invocation.method(
          #completion,
          [model],
        ),
        returnValue: _i4.Future<dynamic>.value(),
      ) as _i4.Future<dynamic>);
}

/// A class which mocks [BaseAnalytics].
///
/// See the documentation for Mockito's code generation for more information.
class MockBaseAnalytics extends _i1.Mock implements _i3.BaseAnalytics {
  MockBaseAnalytics() {
    _i1.throwOnMissingStub(this);
  }

  @override
  set updateOptions(Map<String, dynamic>? _updateOptions) => super.noSuchMethod(
        Invocation.setter(
          #updateOptions,
          _updateOptions,
        ),
        returnValueForMissingStub: null,
      );
  @override
  bool get isInitialized => (super.noSuchMethod(
        Invocation.getter(#isInitialized),
        returnValue: false,
      ) as bool);
  @override
  set isInitialized(bool? _isInitialized) => super.noSuchMethod(
        Invocation.setter(
          #isInitialized,
          _isInitialized,
        ),
        returnValueForMissingStub: null,
      );
  @override
  dynamic logEvent(
    String? name,
    List<Type>? sendTo, {
    Map<String, dynamic>? properties = const {},
  }) =>
      super.noSuchMethod(Invocation.method(
        #logEvent,
        [
          name,
          sendTo,
        ],
        {#properties: properties},
      ));
  @override
  dynamic logPageName(
    String? pageName,
    List<Type>? sendTo, {
    Map<String, dynamic>? properties = const {},
  }) =>
      super.noSuchMethod(Invocation.method(
        #logPageName,
        [
          pageName,
          sendTo,
        ],
        {#properties: properties},
      ));
  @override
  dynamic isSensitiveScreen(
    bool? isSensitive,
    List<Type>? sendTo, {
    Map<String, dynamic>? properties = const {},
  }) =>
      super.noSuchMethod(Invocation.method(
        #isSensitiveScreen,
        [
          isSensitive,
          sendTo,
        ],
        {#properties: properties},
      ));
  @override
  void identifyUser(String? uid) => super.noSuchMethod(
        Invocation.method(
          #identifyUser,
          [uid],
        ),
        returnValueForMissingStub: null,
      );
  @override
  bool shouldSendToThisPlatform(List<Type>? allowedTypes) =>
      (super.noSuchMethod(
        Invocation.method(
          #shouldSendToThisPlatform,
          [allowedTypes],
        ),
        returnValue: false,
      ) as bool);
  @override
  void setUserProperties(Map<String, dynamic>? properties) =>
      super.noSuchMethod(
        Invocation.method(
          #setUserProperties,
          [properties],
        ),
        returnValueForMissingStub: null,
      );
  @override
  void setUserPropertiesWithOptions(
    Map<String, dynamic>? properties,
    String? analyticOption,
  ) =>
      super.noSuchMethod(
        Invocation.method(
          #setUserPropertiesWithOptions,
          [
            properties,
            analyticOption,
          ],
        ),
        returnValueForMissingStub: null,
      );
}

/// A class which mocks [AiRequestUseCase].
///
/// See the documentation for Mockito's code generation for more information.
class MockAiRequestUseCase extends _i1.Mock implements _i7.AiRequestUseCase {
  MockAiRequestUseCase() {
    _i1.throwOnMissingStub(this);
  }

  @override
  String get model => (super.noSuchMethod(
        Invocation.getter(#model),
        returnValue: '',
      ) as String);
  @override
  _i2.AiRequestRepository get repository => (super.noSuchMethod(
        Invocation.getter(#repository),
        returnValue: _FakeAiRequestRepository_0(
          this,
          Invocation.getter(#repository),
        ),
      ) as _i2.AiRequestRepository);
  @override
  _i4.Future<void> getSomeData(
          _i3.RequestObserver<dynamic, _i8.AiResponse?>? requestObserver) =>
      (super.noSuchMethod(
        Invocation.method(
          #getSomeData,
          [requestObserver],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);
  @override
  _i4.Future<void> setSomeData(
          _i3.RequestObserver<_i9.AiQuery?, dynamic>? requestBehaviour) =>
      (super.noSuchMethod(
        Invocation.method(
          #setSomeData,
          [requestBehaviour],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);
}

/// A class which mocks [AiPromptEBR].
///
/// See the documentation for Mockito's code generation for more information.
class MockAiPromptEBR extends _i1.Mock implements _i10.AiPromptEBR {
  MockAiPromptEBR() {
    _i1.throwOnMissingStub(this);
  }

  @override
  String createPrompt(_i11.Celebrated? celebratedPerson) => (super.noSuchMethod(
        Invocation.method(
          #createPrompt,
          [celebratedPerson],
        ),
        returnValue: '',
      ) as String);
}

/// A class which mocks [AbstractAds].
///
/// See the documentation for Mockito's code generation for more information.
class MockAbstractAds extends _i1.Mock implements _i12.AbstractAds {
  MockAbstractAds() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<void> loadAd({String? addUnitID}) => (super.noSuchMethod(
        Invocation.method(
          #loadAd,
          [],
          {#addUnitID: addUnitID},
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);
  @override
  _i4.Future<void> show() => (super.noSuchMethod(
        Invocation.method(
          #show,
          [],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);
}
