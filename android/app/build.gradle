def localProperties = new Properties()
def localPropertiesFile = rootProject.file('local.properties')
if (localPropertiesFile.exists()) {
    localPropertiesFile.withReader('UTF-8') { reader ->
        localProperties.load(reader)
    }
}

def flutterRoot = localProperties.getProperty('flutter.sdk')
if (flutterRoot == null) {
    throw new GradleException("Flutter SDK not found. Define location with flutter.sdk in the local.properties file.")
}

def flutterVersionCode = localProperties.getProperty('flutter.versionCode')
if (flutterVersionCode == null) {
    flutterVersionCode = '1'
}

def flutterVersionName = localProperties.getProperty('flutter.versionName')
if (flutterVersionName == null) {
    flutterVersionName = '1.0'
}

def dartEnvironmentVariables = [
        DEFINE_APP_NAME        : 'appName',
        DEFINE_APP_ID          : 'com.defalut',
        DEFINE_APP_SUFFIX      : '.dev',
        DEFINE_APP_VERSION_CODE: '1',
]
if (project.hasProperty('dart-defines')) {
    dartEnvironmentVariables = dartEnvironmentVariables + project.property('dart-defines')
            .split(',')
            .collectEntries { entry ->
                def pair = new String(entry.decodeBase64(), 'UTF-8').split('=')
                [(pair.first()): pair.last()]
            }
}

apply plugin: 'com.android.application'
// START: FlutterFire Configuration
apply plugin: 'com.google.gms.google-services'
// END: FlutterFire Configuration
apply plugin: 'kotlin-android'
apply from: "$flutterRoot/packages/flutter_tools/gradle/flutter.gradle"

def keystoreProperties = new Properties()
def keystorePropertiesFile = rootProject.file('key.properties')
if (keystorePropertiesFile.exists()) {
    keystoreProperties.load(new FileInputStream(keystorePropertiesFile))
}

android {
    compileSdkVersion 33

    sourceSets {
        main.java.srcDirs += 'src/main/kotlin'
    }

    def DEFINE_APP_ID = dartEnvironmentVariables.DEFINE_APP_ID
    def DEFINE_APP_SUFFIX = dartEnvironmentVariables.DEFINE_APP_SUFFIX
    def DEFINE_APP_NAME = dartEnvironmentVariables.DEFINE_APP_NAME
    def DEFINE_ADS_ANDROID_ID = dartEnvironmentVariables.DEFINE_ADS_ANDROID_ID
    def DEFINE_APP_VERSION_CODE = dartEnvironmentVariables.DEFINE_APP_VERSION_CODE.toInteger()

    println('BUILDING ANDROID APP with config:')
    println('app id: ' + DEFINE_APP_ID + DEFINE_APP_SUFFIX)
    println('app name:' + DEFINE_APP_NAME)
    println('ads id:' + DEFINE_ADS_ANDROID_ID)
    println('versionCode: ' + DEFINE_APP_VERSION_CODE)

    defaultConfig {
        applicationId DEFINE_APP_ID
        applicationIdSuffix DEFINE_APP_SUFFIX
        minSdkVersion 23
        targetSdkVersion 33
        versionCode DEFINE_APP_VERSION_CODE
        versionName flutterVersionName
        resValue "string", "app_name", DEFINE_APP_NAME
        manifestPlaceholders = [mapsApiKey: 'DEFINE_MAPS_API_KEY_ANDROID_PASS_KEY_HERE',
                                adsID     : DEFINE_ADS_ANDROID_ID,
        ]
    }

/*    signingConfigs {
        release {
            keyAlias keystoreProperties['keyAlias']
            keyPassword keystoreProperties['keyPassword']
            storeFile file(keystoreProperties['storeFile'])
            storePassword keystoreProperties['storePassword']
        }
    }

    buildTypes {
        release {
            signingConfig signingConfigs.release
        }

        debug {
            signingConfig signingConfigs.debug
        }
    }*/
}

flutter {
    source '../..'
}

dependencies {
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
}
